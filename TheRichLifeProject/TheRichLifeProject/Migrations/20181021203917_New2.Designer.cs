// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TheRichLifeProject.Models;

namespace TheRichLifeProject.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20181021203917_New2")]
    partial class New2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.0-rtm-30799")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("TheRichLifeProject.Models.Atribute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Atributes");
                });

            modelBuilder.Entity("TheRichLifeProject.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("TheRichLifeProject.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("ProductName");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("TheRichLifeProject.Models.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Body");

                    b.Property<DateTime>("PublishDate");

                    b.Property<string>("Title");

                    b.Property<int?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Review");
                });

            modelBuilder.Entity("TheRichLifeProject.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Adress");

                    b.Property<DateTime>("DateRegistered");

                    b.Property<string>("Password");

                    b.Property<string>("Role");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TheRichLifeProject.Models.Value", b =>
                {
                    b.Property<int>("ValueId")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("AtributeId");

                    b.Property<int?>("ProductId");

                    b.Property<string>("ValueValue");

                    b.HasKey("ValueId");

                    b.HasIndex("AtributeId");

                    b.HasIndex("ProductId");

                    b.ToTable("Values");
                });

            modelBuilder.Entity("TheRichLifeProject.Models.Order", b =>
                {
                    b.HasOne("TheRichLifeProject.Models.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("TheRichLifeProject.Models.Review", b =>
                {
                    b.HasOne("TheRichLifeProject.Models.User", "User")
                        .WithMany("Reviews")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("TheRichLifeProject.Models.Value", b =>
                {
                    b.HasOne("TheRichLifeProject.Models.Atribute", "Atribute")
                        .WithMany("Values")
                        .HasForeignKey("AtributeId");

                    b.HasOne("TheRichLifeProject.Models.Product", "Product")
                        .WithMany("Values")
                        .HasForeignKey("ProductId");
                });
#pragma warning restore 612, 618
        }
    }
}
